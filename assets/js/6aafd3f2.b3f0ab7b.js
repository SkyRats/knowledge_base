"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[40],{3905:function(e,a,n){n.d(a,{Zo:function(){return d},kt:function(){return c}});var o=n(7294);function t(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function r(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);a&&(o=o.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?r(Object(n),!0).forEach((function(a){t(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function l(e,a){if(null==e)return{};var n,o,t=function(e,a){if(null==e)return{};var n,o,t={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],a.indexOf(n)>=0||(t[n]=e[n]);return t}(e,a);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(t[n]=e[n])}return t}var s=o.createContext({}),m=function(e){var a=o.useContext(s),n=a;return e&&(n="function"==typeof e?e(a):i(i({},a),e)),n},d=function(e){var a=m(e.components);return o.createElement(s.Provider,{value:a},e.children)},u={inlineCode:"code",wrapper:function(e){var a=e.children;return o.createElement(o.Fragment,{},a)}},p=o.forwardRef((function(e,a){var n=e.components,t=e.mdxType,r=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),p=m(n),c=t,k=p["".concat(s,".").concat(c)]||p[c]||u[c]||r;return n?o.createElement(k,i(i({ref:a},d),{},{components:n})):o.createElement(k,i({ref:a},d))}));function c(e,a){var n=arguments,t=a&&a.mdxType;if("string"==typeof e||t){var r=n.length,i=new Array(r);i[0]=p;var l={};for(var s in a)hasOwnProperty.call(a,s)&&(l[s]=a[s]);l.originalType=e,l.mdxType="string"==typeof e?e:t,i[1]=l;for(var m=2;m<r;m++)i[m]=n[m];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}p.displayName="MDXCreateElement"},7372:function(e,a,n){n.r(a),n.d(a,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return m},toc:function(){return d},default:function(){return p}});var o=n(7462),t=n(3366),r=(n(7294),n(3905)),i=["components"],l={},s="Conven\xe7\xf5es de C\xf3digo",m={unversionedId:"Software/Convencoes-de-Codigo",id:"Software/Convencoes-de-Codigo",isDocsHomePage:!1,title:"Conven\xe7\xf5es de C\xf3digo",description:"Em geral, times de desenvolvedores passam mais tempo lendo e mantendo c\xf3digo j\xe1 escrito (incluindo durante debugging) do que escrevendo c\xf3digo novo. Assim, \xe9 necess\xe1rio que c\xf3digo seja de f\xe1cil compreens\xe3o tanto para a pessoa que o desenvolveu inicialmente, mas n\xe3o se lembra de todos os detalhes, quanto para outros membros do time que nunca trabalharam no projeto.",source:"@site/../docs/Software/Convencoes-de-Codigo.md",sourceDirName:"Software",slug:"/Software/Convencoes-de-Codigo",permalink:"/knowledge_base/docs/Software/Convencoes-de-Codigo",editUrl:"https://github.com/SkyRats/knowledge_base/tree/main/docs/../docs/Software/Convencoes-de-Codigo.md",tags:[],version:"current",frontMatter:{},sidebar:"docssidebar",previous:{title:"MAVLINK",permalink:"/knowledge_base/docs/Hardware/Firmware/Introdu\xe7\xe3o ao MAVLink"},next:{title:"Gazebo",permalink:"/knowledge_base/docs/Software/Gazebo"}},d=[{value:"Princ\xedpios gerais",id:"princ\xedpios-gerais",children:[{value:"Layout",id:"layout",children:[{value:"Fun\xe7\xf5es",id:"fun\xe7\xf5es",children:[],level:4},{value:"Classes",id:"classes",children:[],level:4}],level:3},{value:"Coment\xe1rios",id:"coment\xe1rios",children:[],level:3},{value:"Nomenclatura",id:"nomenclatura",children:[],level:3},{value:"Inclusividade",id:"inclusividade",children:[],level:3}],level:2},{value:"Python",id:"python",children:[{value:"Layout",id:"layout-1",children:[{value:"Geral",id:"geral",children:[],level:4},{value:"Quebra de linhas",id:"quebra-de-linhas",children:[],level:4},{value:"Espa\xe7o em branco",id:"espa\xe7o-em-branco",children:[],level:4},{value:"<code>import</code>",id:"import",children:[],level:4}],level:3},{value:"Coment\xe1rios",id:"coment\xe1rios-1",children:[],level:3},{value:"Nomenclatura",id:"nomenclatura-1",children:[{value:"Pacotes e M\xf3dulos",id:"pacotes-e-m\xf3dulos",children:[],level:4},{value:"Classes",id:"classes-1",children:[],level:4},{value:"Tipos de vari\xe1veis personalizados",id:"tipos-de-vari\xe1veis-personalizados",children:[],level:4},{value:"Exce\xe7\xf5es",id:"exce\xe7\xf5es",children:[],level:4},{value:"Fun\xe7\xf5es e Vari\xe1veis",id:"fun\xe7\xf5es-e-vari\xe1veis",children:[],level:4},{value:"Constantes",id:"constantes",children:[],level:4}],level:3},{value:"Especificidades da Linguagem",id:"especificidades-da-linguagem",children:[{value:"Trailing Commas",id:"trailing-commas",children:[],level:4},{value:"Underscore",id:"underscore",children:[],level:4},{value:"Name mangling",id:"name-mangling",children:[],level:4},{value:"<code>docstrings</code>",id:"docstrings",children:[],level:4},{value:"Misc",id:"misc",children:[],level:4}],level:3}],level:2},{value:"C++",id:"c",children:[{value:"Layout",id:"layout-2",children:[{value:"Geral",id:"geral-1",children:[],level:4},{value:"Fun\xe7\xf5es",id:"fun\xe7\xf5es-1",children:[],level:4},{value:"Condicionais",id:"condicionais",children:[],level:4},{value:"Loops",id:"loops",children:[],level:4},{value:"Ponteiros",id:"ponteiros",children:[],level:4},{value:"Classes",id:"classes-2",children:[],level:4},{value:"Espa\xe7o em branco",id:"espa\xe7o-em-branco-1",children:[],level:4}],level:3},{value:"Coment\xe1rios",id:"coment\xe1rios-2",children:[{value:"Classes",id:"classes-3",children:[],level:4},{value:"Fun\xe7\xf5es",id:"fun\xe7\xf5es-2",children:[],level:4},{value:"Vari\xe1veis",id:"vari\xe1veis",children:[],level:4},{value:"Implementa\xe7\xe3o",id:"implementa\xe7\xe3o",children:[],level:4}],level:3},{value:"Nomenclatura",id:"nomenclatura-2",children:[{value:"Arquivos",id:"arquivos",children:[],level:4},{value:"Classes e Tipos de vari\xe1veis personalizados",id:"classes-e-tipos-de-vari\xe1veis-personalizados",children:[],level:4},{value:"Vari\xe1veis",id:"vari\xe1veis-1",children:[],level:4},{value:"Constantes",id:"constantes-1",children:[],level:4},{value:"Fun\xe7\xf5es",id:"fun\xe7\xf5es-3",children:[],level:4},{value:"<code>namespaces</code>",id:"namespaces",children:[],level:4},{value:"Macros (<code>#define</code>)",id:"macros-define",children:[],level:4}],level:3},{value:"Especificidades da Linguagem",id:"especificidades-da-linguagem-1",children:[{value:"Headers (arquivos <code>.h</code>)",id:"headers-arquivos-h",children:[],level:4},{value:"<code>namespaces</code>",id:"namespaces-1",children:[],level:4},{value:"Misc",id:"misc-1",children:[],level:4}],level:3}],level:2},{value:"ROS",id:"ros",children:[{value:"Nomenclatura",id:"nomenclatura-3",children:[{value:"Pacotes, T\xf3picos e Servi\xe7os",id:"pacotes-t\xf3picos-e-servi\xe7os",children:[],level:4},{value:"Arquivos",id:"arquivos-1",children:[],level:4}],level:3},{value:"Misc",id:"misc-2",children:[{value:"Sa\xedda do terminal",id:"sa\xedda-do-terminal",children:[],level:4},{value:"C\xf3digo n\xe3o mais mantido",id:"c\xf3digo-n\xe3o-mais-mantido",children:[],level:4}],level:3}],level:2},{value:"Refer\xeancias",id:"refer\xeancias",children:[],level:2}],u={toc:d};function p(e){var a=e.components,n=(0,t.Z)(e,i);return(0,r.kt)("wrapper",(0,o.Z)({},u,n,{components:a,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"conven\xe7\xf5es-de-c\xf3digo"},"Conven\xe7\xf5es de C\xf3digo"),(0,r.kt)("p",null,"Em geral, times de desenvolvedores passam mais tempo lendo e mantendo c\xf3digo j\xe1 escrito (incluindo durante debugging) do que escrevendo c\xf3digo novo. Assim, \xe9 necess\xe1rio que c\xf3digo seja de f\xe1cil compreens\xe3o tanto para a pessoa que o desenvolveu inicialmente, mas n\xe3o se lembra de todos os detalhes, quanto para outros membros do time que nunca trabalharam no projeto."),(0,r.kt)("p",null,"Nesse contexto, conven\xe7\xf5es de programa\xe7\xe3o servem como uma funda\xe7\xe3o para que todos consigam entender e escrever com facilidade c\xf3digo que outras pessoas entendam. Elas economizam tempo de revis\xe3o, permitindo que o programador entenda mais rapidamente a estrutura de um programa pouco familiar. Al\xe9m disso, facilitam que outros grupos integrem c\xf3digo de diversos times e adaptem-no com facilidade."),(0,r.kt)("h2",{id:"princ\xedpios-gerais"},"Princ\xedpios gerais"),(0,r.kt)("p",null,"Essa se\xe7\xe3o descreve atributos de C\xf3digo Limpo, e que se aplicam a qualquer linguagem de programa\xe7\xe3o. Ela n\xe3o \xe9 excludente com as se\xe7\xf5es de linguagens espec\xedficas, e \xe9 at\xe9 mais importante do que as outras. "),(0,r.kt)("h3",{id:"layout"},"Layout"),(0,r.kt)("p",null,"Programas s\xe3o em geral complexos, realizando diversas tarefas para chegar ao resultado desejado. Por isso, \xe9 importante que essas tarefas estejam bem segmentadas em fun\xe7\xf5es e classes claras, sem repeti\xe7\xe3o e, o m\xe1ximo poss\xedvel, independentes da implementa\xe7\xe3o de outras fun\xe7\xf5es ou classes."),(0,r.kt)("h4",{id:"fun\xe7\xf5es"},"Fun\xe7\xf5es"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Devem ser pequenas, realizando apenas uma \xfanica tarefa",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"\xc9 aconselh\xe1vel tentar deixar suas fun\xe7\xf5es com at\xe9 20 linhas, mas isso n\xe3o \xe9 necess\xe1rio"),(0,r.kt)("li",{parentName:"ul"},"De prefer\xeancia em um \xfanico n\xedvel de abstra\xe7\xe3o (esse \xe9 o crit\xe9rio mais dif\xedcil de implementar)"))),(0,r.kt)("li",{parentName:"ul"},"Devem ter o menor n\xfamero de argumentos poss\xedvel, preferencialmente at\xe9 3",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Caso tenha mais, possivelmente esses argumentos poderiam ser colocados em um objeto de mais f\xe1cil compreens\xe3o (e.g. um objeto ",(0,r.kt)("inlineCode",{parentName:"li"},"Point")," em vez de ",(0,r.kt)("inlineCode",{parentName:"li"},"x")," e ",(0,r.kt)("inlineCode",{parentName:"li"},"y"),")"),(0,r.kt)("li",{parentName:"ul"},"Caso v\xe1rias fun\xe7\xf5es dependam de uma mesma lista de argumentos, considere coloc\xe1-las em uma classe \xe0 parte"))),(0,r.kt)("li",{parentName:"ul"},"Devem ou executar uma tarefa, ou retornas informa\xe7\xe3o, mas n\xe3o os dois"),(0,r.kt)("li",{parentName:"ul"},"Devem preferencialmente n\xe3o modificar seus argumentos ou ter efeitos em outros objetos que n\xe3o estejam \xf3bvios")),(0,r.kt)("h4",{id:"classes"},"Classes"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Devem ser pequenas e coesas (i.e. ter membros com depend\xeancias similares e que necessariamente se beneficiam de estarem juntos)"),(0,r.kt)("li",{parentName:"ul"},"Devem permitir adi\xe7\xe3o de novas fun\xe7\xf5es facilmente")),(0,r.kt)("p",null,"\xc9 necess\xe1rio ressaltar que ",(0,r.kt)("strong",{parentName:"p"},"nenhum objeto deve depender da implementa\xe7\xe3o de outro"),". "),(0,r.kt)("p",null,"Por exemplo, uma classe ",(0,r.kt)("inlineCode",{parentName:"p"},"DrawCircle")," depende do fato da classe ",(0,r.kt)("inlineCode",{parentName:"p"},"LocateCircle")," ter atributos ",(0,r.kt)("inlineCode",{parentName:"p"},"center_x_")," e ",(0,r.kt)("inlineCode",{parentName:"p"},"center_y_"),". Posteriormente, a classe ",(0,r.kt)("inlineCode",{parentName:"p"},"LocateCircle")," passa a armazenar o centro em coordenadas polares. Com isso, ",(0,r.kt)("inlineCode",{parentName:"p"},"DrawCircle")," vai parar de funcionar e vai precisar ser modificada tamb\xe9m. Nesse exemplo, seria mais adequado existir uma fun\xe7\xe3o ",(0,r.kt)("inlineCode",{parentName:"p"},"GetCircleCenter")," em ",(0,r.kt)("inlineCode",{parentName:"p"},"LocateCircle"),", criando uma camada de abstra\xe7\xe3o entre as implementa\xe7\xf5es das classes."),(0,r.kt)("h3",{id:"coment\xe1rios"},"Coment\xe1rios"),(0,r.kt)("p",null,"Do Google C++ Style Guide:"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Comments are absolutely vital to keeping our code readable. The following rules describe what you should comment and where. But remember: while comments are very important, the best code is self-documenting.")),(0,r.kt)("p",null,"Do Style Guide for Python Code"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Comments that contradict the code are worse than no comments. Always make a priority of keeping the comments up-to-date when the code changes!")),(0,r.kt)("p",null,"Idealmente, c\xf3digo bem escrito n\xe3o exige coment\xe1rios. Eles s\xe3o indicativos de que o seu c\xf3digo n\xe3o consegue se explicar adequadamente, j\xe1 que voc\xea ter\xe1 implementado fun\xe7\xf5es pequenas, que realizam fun\xe7\xf5es \xfanicas, conforme as recomenda\xe7\xf5es acima."),(0,r.kt)("p",null,"\xc9 claro que existem trechos de c\xf3digo que precisam ser comentados, mas \xe9 necess\xe1rio frisar que coment\xe1rios geralmente tornam a vida do desenvolvedor mais complicada por n\xe3o serem atualizados com frequ\xeancia; assim, o c\xf3digo muda, mas os coment\xe1rios descrevendo-o, n\xe3o. Logo, \xe9 preciso pensar em coment\xe1rios como um peso, n\xe3o um facilitador."),(0,r.kt)("p",null,"As conven\xe7\xf5es a seguir descrevem o bom uso de coment\xe1rios. Vale ressaltar algumas ocasi\xf5es em que eles podem de fato ser \xfateis:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Explica\xe7\xe3o de motiva\xe7\xe3o (e.g. por que um caso espec\xedfico \xe9 diferente do caso geral?)"),(0,r.kt)("li",{parentName:"ul"},"Avisos de consequ\xeancia (e.g. se um programa demora muito para ser executado)"),(0,r.kt)("li",{parentName:"ul"},"Coment\xe1rios ",(0,r.kt)("inlineCode",{parentName:"li"},"TODO"))),(0,r.kt)("p",null,"E algumas em que eles s\xe3o ",(0,r.kt)("strong",{parentName:"p"},"inapropriados"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Coment\xe1rios redundantes (que repetem o que est\xe1 claro no c\xf3digo)"),(0,r.kt)("li",{parentName:"ul"},"Coment\xe1rios no fechamento de chaves ou par\xeanteses (exceto para ",(0,r.kt)("inlineCode",{parentName:"li"},"namespaces"),")"),(0,r.kt)("li",{parentName:"ul"},"C\xf3digo comentado",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Pode ser \xfatil ao fazer testes locais, mas deve ser removido antes de colocar no reposit\xf3rio"),(0,r.kt)("li",{parentName:"ul"},"Se for necess\xe1rio mais tarde, basta recuperar o hist\xf3rico do reposit\xf3rio"))),(0,r.kt)("li",{parentName:"ul"},"Informa\xe7\xe3o sobre outras partes do c\xf3digo"),(0,r.kt)("li",{parentName:"ul"},"Informa\xe7\xe3o excessiva (e.g. como uma fun\xe7\xe3o foi implementada)")),(0,r.kt)("h3",{id:"nomenclatura"},"Nomenclatura"),(0,r.kt)("p",null,"Do Google C++ Style Guide:"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Optimize for readability using names that would be clear even to people on a different team.\nUse names that describe the purpose or intent of the object. Do not worry about saving horizontal space as it is far more important to make your code immediately understandable by a new reader. Minimize the use of abbreviations that would likely be unknown to someone outside your project (especially acronyms and initialisms).")),(0,r.kt)("p",null,"Nomes n\xe3o podem de forma alguma ser amb\xedguos. Eles devem ser descritivos o suficiente para possibilitarem a leitura fluida do c\xf3digo por uma pessoa que n\xe3o conhece muito sobre o sistema, n\xe3o importando se para isso parecerem muito grandes."),(0,r.kt)("p",null,"Por exemplo, uma pessoa n\xe3o deve ter que voltar \xe0 defini\xe7\xe3o de uma vari\xe1vel ",(0,r.kt)("inlineCode",{parentName:"p"},"num")," para descobrir que \xe9 um contador do n\xfamero de dummies encontrados;  a vari\xe1vel deveria se chamar ",(0,r.kt)("inlineCode",{parentName:"p"},"number_of_dummmies_found")," ou ainda possivelmente ",(0,r.kt)("inlineCode",{parentName:"p"},"num_dummies_found"),"."),(0,r.kt)("p",null,"Em geral, quanto maior o escopo de uma vari\xe1vel, maior deve ser o nome dela para descrever bem um objeto. Por exemplo, dentro da fun\xe7\xe3o ",(0,r.kt)("inlineCode",{parentName:"p"},"count_dummies()"),", uma vari\xe1vel chamada ",(0,r.kt)("inlineCode",{parentName:"p"},"count")," seria clara pelo seu contexto, mas n\xe3o seria caso ela fosse uma vari\xe1vel global."),(0,r.kt)("p",null,"Ou seja, o nome da vari\xe1vel precisa ser descritiva o suficiente para ser entendida ",(0,r.kt)("strong",{parentName:"p"},"quando em seu contexto"),", e n\xe3o mais. N\xe3o crie com informa\xe7\xe3o que poderia ser inferida da classe ou fun\xe7\xe3o em que seu objeto est\xe1 inserido."),(0,r.kt)("p",null,"Tente evitar abrevia\xe7\xf5es, exceto aquelas que s\xe3o absolutamente \xf3bvias mesmo para uma pessoa que n\xe3o conhece o sistema implementado."),(0,r.kt)("h3",{id:"inclusividade"},"Inclusividade"),(0,r.kt)("p",null,"Do Google C++ Style Guide:"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},'In all code, including naming and comments, use inclusive language and avoid terms that other programmers might find disrespectful or offensive (such as "master" and "slave", "blacklist" and "whitelist", or "redline"), even if the terms also have an ostensibly neutral meaning. Similarly, use gender-neutral language unless you\'re referring to a specific person (and using their pronouns). For example, use "they"/"them"/"their" for people of unspecified gender (even when singular), and "it"/"its" for software, computers, and other things that aren\'t people.')),(0,r.kt)("h2",{id:"python"},"Python"),(0,r.kt)("h3",{id:"layout-1"},"Layout"),(0,r.kt)("h4",{id:"geral"},"Geral"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Indenta\xe7\xe3o de 4 espa\xe7os"),(0,r.kt)("li",{parentName:"ul"},"Linhas devem ter at\xe9 79 caracteres",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Pode ser estendido at\xe9 99 caracteres caso o time escolha isso"),(0,r.kt)("li",{parentName:"ul"},"Textos longos sem restri\xe7\xf5es estruturais (e.g. coment\xe1rios e ",(0,r.kt)("inlineCode",{parentName:"li"},"docstrings"),") devem ter no m\xe1ximo 72"))),(0,r.kt)("li",{parentName:"ul"},"Arquivos devem ser codificados em UTF-8")),(0,r.kt)("h4",{id:"quebra-de-linhas"},"Quebra de linhas"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},'Quebras de linha devem ser indentadas no mesmo n\xedvel do conte\xfado original, ou usar "hanging indent" - adicionar uma indenta\xe7\xe3o para distiguir argumentos de c\xf3digo, por exemplo')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'# Alinhado com o delimitador\nfoo = long_function_name(var_one, var_two,\n                         var_three, var_four)\n\n# Adicione um nivel de indentacao para distinguir argumentos do resto\ndef long_function_name(\n        var_one, var_two, var_three,\n        var_four):\n    print(var_one)\n    \n# "Hanging indents"\nfoo = long_function_name(\n    var_one, var_two,\n    var_three, var_four)\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Quebras de linhas em ",(0,r.kt)("inlineCode",{parentName:"p"},"if"),"-statements com mais de uma linha podem ou n\xe3o ser indentados")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Fechamento de par\xeanteses/chaves/colchetes em estruturas de mais de uma linha podem se alinhar com o conte\xfado ou com o primeiro caractere da linha da estrutura"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"# Alinhamento com o conte\xfado\nmy_list = [\n    1, 2, 3,\n    4, 5, 6,\n    ]\n\n# Alinhamento com o primeiro caractere\nmy_list = [\n    1, 2, 3,\n    4, 5, 6,\n]\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"\xc9 prefer\xedvel encapsular estruturas de v\xe1rias linhas entre par\xeanteses")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Linhas devem ser quebradas antes de operadores bin\xe1rios"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"# Errado\nincome = (gross_wages +\n            taxable_interest)\n\n# Correto\nincome = (gross_wages\n            + taxable_interest)\n")),(0,r.kt)("h4",{id:"espa\xe7o-em-branco"},"Espa\xe7o em branco"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Separe fun\xe7\xf5es de alto n\xedvel e defini\xe7\xf5es de classes com duas linhas em branco")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Separe m\xe9todos da mesma classe com uma linha em branco")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Linhas em branco a mais podem ser usadas, com parcim\xf4nia, em:"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Separa\xe7\xe3o de conjuntos de fun\xe7\xf5es"),(0,r.kt)("li",{parentName:"ul"},"Indica\xe7\xe3o de se\xe7\xf5es l\xf3gicas")))),(0,r.kt)("p",null,"Evite:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Dentro de par\xeanteses/chaves/colchetes")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Entre uma v\xedrgula final e o fechamento de par\xeanteses"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"# Correto\nfoo = (0,) \n        foo = (0,) \nfoo = (0,) \n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Imediatamente antes de um sinal de pontua\xe7\xe3o")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Imediatamente antes de abrir par\xeanteses ao chamar uma fun\xe7\xe3o"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"# Correto\nspam(1)\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Mais de dois espa\xe7os ao redor de um operador de atribui\xe7\xe3o para alinh\xe1-lo com outros")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Espa\xe7os no final da linha")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Colocar espa\xe7o entre o ",(0,r.kt)("inlineCode",{parentName:"p"},"=")," e o argumento de uma fun\xe7\xe3o"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"# Correto\ndef complex(real, imag=0.0):\n    return magic(r=real, i=imag)\n\n# Errado\ndef complex(real, imag = 0.0):\n    return magic(r = real, i = imag)\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Deixe um espa\xe7o entre vari\xe1veis e operadores bin\xe1rios")),(0,r.kt)("h4",{id:"import"},(0,r.kt)("inlineCode",{parentName:"h4"},"import")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Devem estar em linhas separadas")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Mas se forem v\xe1rios importados do mesmo local, podem ficar na mesma linha"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"import os\nimport sys\nfrom subprocess import Popen, PIPE\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Sempre vem no topo do arquivo")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Devem ser agrupados na seguinte ordem:"),(0,r.kt)("ol",{parentName:"li"},(0,r.kt)("li",{parentName:"ol"},"Bibliotecas padr\xe3o"),(0,r.kt)("li",{parentName:"ol"},"Bibliotecas de terceiros relacionadas"),(0,r.kt)("li",{parentName:"ol"},"Bibliotecas espec\xedficas \xe0 aplica\xe7\xe3o"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"\xc9 prefer\xedvel fazer refer\xeancia absoluta a ",(0,r.kt)("inlineCode",{parentName:"p"},"import"),"s, mesmo que estejam no mesmo pacote"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Exceto quando nomes de pacotes forem excessivamente grandes")))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"import mypkg.sibling\nfrom mypkg import sibling\nfrom mypkg.sibling import example\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},'"Wildcard" ',(0,r.kt)("inlineCode",{parentName:"li"},"import"),"s (como ",(0,r.kt)("inlineCode",{parentName:"li"},"from mavbase.MAV import *"),") devem ser evitados")),(0,r.kt)("h3",{id:"coment\xe1rios-1"},"Coment\xe1rios"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Devem ser frases completas em ingl\xeas")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Se fazem refer\xeancia a vari\xe1veis, devem referenciar o nome da vari\xe1vel exatamente como aparece no c\xf3digo")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Coment\xe1rios em blocos"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Devem ser indentados junto com o c\xf3digo que referenciam"),(0,r.kt)("li",{parentName:"ul"},"Devem come\xe7ar com um ",(0,r.kt)("inlineCode",{parentName:"li"},"# ")),(0,r.kt)("li",{parentName:"ul"},"Par\xe1grafos devem ser separados por uma linha contendo somente um ",(0,r.kt)("inlineCode",{parentName:"li"},"#")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Coment\xe1rios em linha"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Devem ser usados com parcim\xf4nia"),(0,r.kt)("li",{parentName:"ul"},"Devem ser separados do c\xf3digo por pelo menos 2 espa\xe7os")))),(0,r.kt)("h3",{id:"nomenclatura-1"},"Nomenclatura"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},'\xc9 prefer\xedvel manter a consist\xeancia com c\xf3digo "errado" a misturar estilos no mesmo arquivo',(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Uma outra possibilidade \xe9 refatorar o programa todo pra se adequar ao padr\xe3o escolhido pela equipe")))),(0,r.kt)("h4",{id:"pacotes-e-m\xf3dulos"},"Pacotes e M\xf3dulos"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Tudo min\xfasculo, com underscore entre as palavras")),(0,r.kt)("h4",{id:"classes-1"},"Classes"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"CapWords (aka CamelCase): s\xf3 as primeiras letras de cada palavra em mai\xfasculas")),(0,r.kt)("h4",{id:"tipos-de-vari\xe1veis-personalizados"},"Tipos de vari\xe1veis personalizados"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"CapWords, preferencialmente com nomes abreviados")),(0,r.kt)("h4",{id:"exce\xe7\xf5es"},"Exce\xe7\xf5es"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Exce\xe7\xf5es s\xe3o classes, ent\xe3o seguem o modelo das classes"),(0,r.kt)("li",{parentName:"ul"},"Usam o sufixo ",(0,r.kt)("inlineCode",{parentName:"li"},"Error"))),(0,r.kt)("h4",{id:"fun\xe7\xf5es-e-vari\xe1veis"},"Fun\xe7\xf5es e Vari\xe1veis"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Todas min\xfasculas, com underscore separando palavras"),(0,r.kt)("li",{parentName:"ul"},"mixedCase tamb\xe9m \xe9 permitido se o programa j\xe1 usa esse estilo")),(0,r.kt)("h4",{id:"constantes"},"Constantes"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Devem ser com todas as letras mai\xfasculas, e underscore entre as palavras")),(0,r.kt)("h3",{id:"especificidades-da-linguagem"},"Especificidades da Linguagem"),(0,r.kt)("h4",{id:"trailing-commas"},"Trailing Commas"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Geralmente opcionais, mas podem ser \xfateis se \xe9 espperado que a lista cres\xe7a")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Quando forem usadas, \xe9 recomendado colocar entre par\xeanteses")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"N\xe3o devem estar junto ao fechamento de par\xeanteses/chaves/colchetes"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"# Correto\nFILES = ('setup.cfg',)\n# Errado\nFILES = 'setup.cfg',\n\n# Correto\nFILES = [\n    'setup.cfg',\n    'tox.ini',\n    ]\ninitialize(FILES,\n            error=True,\n            )\n")),(0,r.kt)("h4",{id:"underscore"},"Underscore"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Existem quatro jeitos de usar underscore em nomes de Python:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'um_no_final_  # Usado para nao conflitar com nomes reservados \n    um_no_final_  # Usado para nao conflitar com nomes reservados \num_no_final_  # Usado para nao conflitar com nomes reservados \n_um_no_inicio  # Indica que a variavel e de uso interno, mas ela ainda pode ser acessada por outros arquivos facilmente \n    _um_no_inicio  # Indica que a variavel e de uso interno, mas ela ainda pode ser acessada por outros arquivos facilmente \n_um_no_inicio  # Indica que a variavel e de uso interno, mas ela ainda pode ser acessada por outros arquivos facilmente \n__dois_no_inicio  # Quando for atributo de classe, invoca "name mangling" (ver Especificades da Linguagem)\n__dois_no_inicio_e_fim__  # "Nomes magicos; NAO invente novos, so use os ja existentes"\n')),(0,r.kt)("h4",{id:"name-mangling"},"Name mangling"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},'Python "funde" o nome da classe com o da vari\xe1vel para dificultar o acesso indevido a ela'),(0,r.kt)("li",{parentName:"ul"},"Por exemplo, se a classe ",(0,r.kt)("inlineCode",{parentName:"li"},"Foo")," tem um atributo ",(0,r.kt)("inlineCode",{parentName:"li"},"__a"),", ele n\xe3o pode ser acessado com ",(0,r.kt)("inlineCode",{parentName:"li"},"Foo.__a"),", mas sim com ",(0,r.kt)("inlineCode",{parentName:"li"},"Foo._Foo__a")),(0,r.kt)("li",{parentName:"ul"},"Mangling pode afetar debug de programas negativamente")),(0,r.kt)("h4",{id:"docstrings"},(0,r.kt)("inlineCode",{parentName:"h4"},"docstrings")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"docstrings")," s\xe3o uma forma padronizada de documenta\xe7\xe3o de fun\xe7\xf5es e classes em Python",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Para um m\xf3dulo, devem estar no ",(0,r.kt)("inlineCode",{parentName:"li"},"__init__.py")," e devem listar as classes e fun\xe7\xf5es do m\xf3dulo em resumos de uma linha cada."),(0,r.kt)("li",{parentName:"ul"},"Para uma classe, devem estar no m\xe9todo ",(0,r.kt)("inlineCode",{parentName:"li"},"__init__"),", e devem listar seus m\xe9todos p\xfablicos e interfaces para a cria\xe7\xe3o de subclasses (caso existam)"),(0,r.kt)("li",{parentName:"ul"},"Para uma fun\xe7\xe3o, deve resumir seus argumentos (argumentos opcionais devem ser indicados), comportamento, valores de sa\xedda, exce\xe7\xf5es levantadas, restri\xe7\xf5es ao ser chamada"))),(0,r.kt)("li",{parentName:"ul"},"Devem ser posicionadas no inicio do objeto para se tornarem o atributo ",(0,r.kt)("inlineCode",{parentName:"li"},"__doc__")," desse objeto"),(0,r.kt)("li",{parentName:"ul"},"Sempre use ",(0,r.kt)("inlineCode",{parentName:"li"},'"""aspas triplas"""')," ao fazer uma ",(0,r.kt)("inlineCode",{parentName:"li"},"docstring"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'def function(a, b):\n    """Utilize essa funcao para fazer X coisa."""\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"docstrings")," com mais de uma linha devem ter um resumo de uma linha, seguido de um espa\xe7o em branco e de uma descri\xe7\xe3o mais completa dos elementos e comportamento do objeto")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'def complex_function(a=0.0, b=0.0):\n    """Essa funcao faz X coisas.\n\n    Keyword arguments:\n    a -- pequena descri\xe7\xe3o sobre a (default 0.0)\n    b -- pequena descri\xe7\xe3o sobre b (default 0.0)\n    """\n')),(0,r.kt)("h4",{id:"misc"},"Misc"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Sempre compare algo a ",(0,r.kt)("inlineCode",{parentName:"p"},"None")," usando ",(0,r.kt)("inlineCode",{parentName:"p"},"is")," e ",(0,r.kt)("inlineCode",{parentName:"p"},"is not"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"N\xe3o \xe9 recomendado definir fun\xe7\xf5es com ",(0,r.kt)("inlineCode",{parentName:"p"},"lambda")," arbitrariamente para ajudar em debugging")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Ao usar ",(0,r.kt)("inlineCode",{parentName:"p"},"try-except"),", sempre defina o tipo de erro de que o bloco deve tratar")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Seja consistente com ",(0,r.kt)("inlineCode",{parentName:"p"},"return"),": ou todos os ",(0,r.kt)("inlineCode",{parentName:"p"},"return"),"s devolvem express\xf5es, ou nenhum devolve"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"# Correto\ndef foo(x):\n    if x >= 0:\n        return math.sqrt(x)\n    else:\n        return None\n    \n# Errado\ndef foo(x):\n    if x >= 0:\n        return math.sqrt(x)\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Para sequ\xeancias (",(0,r.kt)("inlineCode",{parentName:"li"},"strings"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"lists"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"tuples"),"), use o fato de que sequ\xeancias vazias s\xe3o ",(0,r.kt)("inlineCode",{parentName:"li"},"False"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"# Correto\nif not seq\n\n# Errado\nif len(seq)\n")),(0,r.kt)("h2",{id:"c"},"C++"),(0,r.kt)("h3",{id:"layout-2"},"Layout"),(0,r.kt)("h4",{id:"geral-1"},"Geral"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Linhas devem ter no m\xe1ximo 80 caracteres, exceto",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Em conte\xfado que n\xe3o deve ser separado (e.g. URLs)"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"#include")))),(0,r.kt)("li",{parentName:"ul"},"Arquivos devem ser codificados em UTF-8"),(0,r.kt)("li",{parentName:"ul"},"Indenta\xe7\xe3o de 2 espa\xe7os"),(0,r.kt)("li",{parentName:"ul"},"Valores para ",(0,r.kt)("inlineCode",{parentName:"li"},"return")," \u2192 s\xf3 use par\xeanteses caso houver quebra de linha"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"namespace")," \u2192 n\xe3o se deve indentar")),(0,r.kt)("h4",{id:"fun\xe7\xf5es-1"},"Fun\xe7\xf5es"),(0,r.kt)("p",null,"Defini\xe7\xe3o de fun\xe7\xf5es"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Tente definir em uma \xfanica linha",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Se lista de argumentos passar de 80 caracteres, quebre a linha desta forma:")))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c++"},"ReturnType ClassName::ReallyLongFunctionName(Type par_name1, Type par_name2,\n                                                Type par_name3) {\n    DoSomething();\n    ...\n}\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Se nem mesmo o primeiro argumento couber na defini\xe7\xe3o, fa\xe7a:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c++"},"ReturnType LongClassName::ReallyReallyReallyLongFunctionName(\n    Type par_name1,  // 2 indenta\xe7\xf5es\n    Type par_name2,\n    Type par_name3) {\n    DoSomething();  // 1 indenta\xe7\xe3o\n    ...\n}\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"N\xe3o h\xe1 espa\xe7o entre par\xeanteses e o nome da fun\xe7\xe3o")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"A abertura de chaves \xe9 na mesma linha da declara\xe7\xe3o da fun\xe7\xe3o")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"O fechamento de chaves \xe9 na mesma linha da abertura ou em uma linha pr\xf3pria\n")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Chamar fun\xe7\xf5es"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Seguem as mesmas regras de quebra de linha que defini\xe7\xf5es de fun\xe7\xf5es"),(0,r.kt)("li",{parentName:"ul"},"Caso um argumento seja uma express\xe3o muito complexa, considere dar um nome a ele, ou adicion\xe1-lo sozinho numa linha"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Essas regras podem ser quebradas se o posicionamento espacial dos argumentos auxiliar na legibilidade (e.g quando trabalhando com matrizes)"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c++"},"// Dando um nome ao argumento\nint my_heuristic = scores[x] * y + bases[x];\nbool result = DoSomething(my_heuristic, x, y, z);\n\n// Separando o argumento em uma linha a parte\nbool result = DoSomething(scores[x] * y + bases[x],  // Score heuristic.\n                            x, y, z);\n")),(0,r.kt)("h4",{id:"condicionais"},"Condicionais"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Coloque um espa\xe7o entre o ",(0,r.kt)("inlineCode",{parentName:"li"},"if")," e os par\xeanteses"),(0,r.kt)("li",{parentName:"ul"},"Chaves devem ser abertas na mesma linha da declara\xe7\xe3o, e fechadas em uma continua\xe7\xe3o (e.g. ",(0,r.kt)("inlineCode",{parentName:"li"},"if (...) { } else {"),") ou em uma linha separada"),(0,r.kt)("li",{parentName:"ul"},"Caso a condicional seja um \xfanico ",(0,r.kt)("inlineCode",{parentName:"li"},"if"),", pode-se omitir as chaves")),(0,r.kt)("h4",{id:"loops"},"Loops"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Chaves s\xe3o opcionais caso o loop tenha s\xf3 uma declara\xe7\xe3o"),(0,r.kt)("li",{parentName:"ul"},"Loops vazios devem abrir e fechar chaves vazias ou ter uma declara\xe7\xe3o ",(0,r.kt)("inlineCode",{parentName:"li"},"continue")," dentro deles para mostrar que est\xe3o vazios")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c++"},"    while (condition) {\n      // Repete o teste ate que retorne falso.\n    }\n    for (int i = 0; i < kSomeNumber; ++i) {}  // Bom\n    while (condition) continue;  // Bom - ainda indica que nao ha logica\n\n    while (condition);  // Ruim - parece parte de um do/while\n")),(0,r.kt)("h4",{id:"ponteiros"},"Ponteiros"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Refer\xeancias a ponteiros devem seguir o padr\xe3o:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c++"},"x = *p;\np = &x;\nx = r.y;\nx = r->y;\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Quando juntos de defini\xe7\xf5es de tipo, pode haver espa\xe7o antes, depois ou ele pode ser emitido; deve-se ser consistente dentro do mesmo arquivo")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c++"},"// Espaco antes\nchar *c;\nconst std::string &str;\nint *GetPointer();\nstd::vector<char *>\n\n// Espaco depois\nchar* c;\nconst std::string& str;\nint* GetPointer();\n\n// Espaco omitido\nstd::vector<char*>\n")),(0,r.kt)("h4",{id:"classes-2"},"Classes"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Se\xe7\xf5es de ",(0,r.kt)("inlineCode",{parentName:"li"},"public"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"protected")," e ",(0,r.kt)("inlineCode",{parentName:"li"},"private")," s\xe3o indentadas com rela\xe7\xe3o \xe0 defini\xe7\xe3o da classe e devem ser precedidas por uma linha em branco (exceto a primeira inst\xe2ncia)"),(0,r.kt)("li",{parentName:"ul"},"Construtores devem ter lista de par\xe2metros seguindo as regras de quebra de linha de fun\xe7\xf5es descritas acima")),(0,r.kt)("p",null,"Exemplo:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c++"},"class MyClass : public OtherClass {\n public:      \n  MyClass();\n  explicit MyClass(int var);\n  ~MyClass() {}\n\n  void SomeFunction();\n  void SomeFunctionThatDoesNothing() {\n  }\n\n  void set_some_var(int var) { some_var_ = var; }\n  int some_var() const { return some_var_; }\n\n private:\n  bool SomeInternalFunction();\n\n  int some_var_;\n  int some_other_var_;\n};\n\n// Quando tudo cabe em uma linha\nMyClass::MyClass(int var) : some_var_(var) {\n  DoSomething();\n}\n\n// Se a lista de atributos nao estiver toda na mesma linha,\n// voce deve quebrar antes dos dois-pontos e indentar 4 espacos:\nMyClass::MyClass(int var)\n    : some_var_(var), some_other_var_(var + 1) {\n  DoSomething();\n}\n\n// Quando a lista tem muitas linhas, coloque cada atributo\n// em uma linha e os alinhe:\nMyClass::MyClass(int var)\n    : some_var_(var),             // indentacao de 4 espacos\n      some_other_var_(var + 1) {  // alinhado\n  DoSomething();\n}\n")),(0,r.kt)("h4",{id:"espa\xe7o-em-branco-1"},"Espa\xe7o em branco"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Horizontal \u2192 depende da localiza\xe7\xe3o, mas ",(0,r.kt)("strong",{parentName:"li"},"NUNCA")," no final de uma linha",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Seja consistente: se houver de um lado de par\xeanteses, coloque no outro tamb\xe9m"),(0,r.kt)("li",{parentName:"ul"},"Operadores matem\xe1ticos un\xe1rios tem espa\xe7o para a vari\xe1vel"),(0,r.kt)("li",{parentName:"ul"},"Operadores bin\xe1rios devem ter espa\xe7o, mas \xe9 permitido remover de fatores"),(0,r.kt)("li",{parentName:"ul"},"Par\xeanteses n\xe3o devem ter espa\xe7o interno"))),(0,r.kt)("li",{parentName:"ul"},"Vertical \u2192 minimize sempre que poss\xedvel",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"N\xe3o \xe9 uma regra, mas uma recomenda\xe7\xe3o"),(0,r.kt)("li",{parentName:"ul"},"Linhas em branco s\xe3o como quebras de par\xe1grafo - elas deve separar blocos coesos de c\xf3digo")))),(0,r.kt)("h3",{id:"coment\xe1rios-2"},"Coment\xe1rios"),(0,r.kt)("h4",{id:"classes-3"},"Classes"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Todas as classes ou structs n\xe3o \xf3bvias devem ter coment\xe1rios que descrevem o que elas fazem e como us\xe1-las"),(0,r.kt)("li",{parentName:"ul"},"Com separa\xe7\xe3o suficiente entre ",(0,r.kt)("inlineCode",{parentName:"li"},".cc")," e ",(0,r.kt)("inlineCode",{parentName:"li"},".h"),", coment\xe1rios de implementa\xe7\xe3o devem ir no ",(0,r.kt)("inlineCode",{parentName:"li"},".cc")," e de uso, no ",(0,r.kt)("inlineCode",{parentName:"li"},".h"))),(0,r.kt)("h4",{id:"fun\xe7\xf5es-2"},"Fun\xe7\xf5es"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},'Devem ter coment\xe1rios come\xe7ando com verbos cujo sujeito impl\xedcito \xe9 "esta fun\xe7\xe3o"'),(0,r.kt)("li",{parentName:"ul"},"N\xe3o descrevem como ela faz o que faz"),(0,r.kt)("li",{parentName:"ul"},"Devem descrever como a fun\xe7\xe3o interage com o mundo externo, descrevendo por exemplo:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Entradas e sa\xeddas"),(0,r.kt)("li",{parentName:"ul"},"Aloca\xe7\xe3o de mem\xf3ria (s\xf3 se o usu\xe1rio precisar desalocar)"),(0,r.kt)("li",{parentName:"ul"},"Se algum dos argumentos pode ser ",(0,r.kt)("inlineCode",{parentName:"li"},"NULL")," ou n\xe3o"))),(0,r.kt)("li",{parentName:"ul"},"Coment\xe1rios dentro da fun\xe7\xe3o devem ser usados com parcim\xf4nia para descrever peculiaridades de implementa\xe7\xe3o (e.g. por que o primeiro caso \xe9 diferente do caso geral em um loop)")),(0,r.kt)("h4",{id:"vari\xe1veis"},"Vari\xe1veis"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Atributos de classe",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"S\xf3 se o tipo e nome da vari\xe1vel n\xe3o a descreverem o suficiente"),(0,r.kt)("li",{parentName:"ul"},"Descreva valores padr\xe3o, como no exemplo:")))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c++"},"private:\n    // Usado para conferir acesso a tabela. -1 significa\n    // que n\xe3o sabemos ainda quantas entradas a tabela tem.\n    int num_total_entries_;\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Vari\xe1veis globais",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Todas precisam de um coment\xe1rio explicando o que s\xe3o, como s\xe3o usadas e, caso n\xe3o esteja claro, porque precisam ser globais")))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c++"},"// O numero de vezes que passamos por essse teste.\nconst int kNumTestCases = 6;\n")),(0,r.kt)("h4",{id:"implementa\xe7\xe3o"},"Implementa\xe7\xe3o"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Blocos de c\xf3digo complicados devem ter coment\xe1rios explicat\xf3rios antes do c\xf3digo em si")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Linhas confusas dever ter coment\xe1rios no final da linha, separados por um ",(0,r.kt)("inlineCode",{parentName:"p"},"Tab")," do c\xf3digo")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Argumentos de fun\xe7\xf5es"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"S\xf3 quando n\xe3o forem \xf3bvios pelos nomes ou pela descri\xe7\xe3o da fun\xe7\xe3o"),(0,r.kt)("li",{parentName:"ul"},"Se o argumento for uma constante, deixe isso expl\xedcito no nome dela"),(0,r.kt)("li",{parentName:"ul"},"Caso a fun\xe7\xe3o receba muitos argumentos, considere criar uma struct ou classe para cont\xea-los. Por exemplo:")))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c++"},"ProductOptions options;\noptions.set_precision_decimals(7);\noptions.set_use_cache(ProductOptions::kDontUseCache);\nconst DecimalNumber product =\n    CalculateProduct(values, options, /*completion_callback=*/nullptr);\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Em \xfaltimo caso, explique os argumentos com coment\xe1rios\n")),(0,r.kt)("h3",{id:"nomenclatura-2"},"Nomenclatura"),(0,r.kt)("h4",{id:"arquivos"},"Arquivos"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Letras todas min\xfasculas, com ",(0,r.kt)("inlineCode",{parentName:"li"},"_")," (preferencialmente) ou ",(0,r.kt)("inlineCode",{parentName:"li"},"-")," separando palavras"),(0,r.kt)("li",{parentName:"ul"},"Arquivos em C++ deveriam terminar com ",(0,r.kt)("inlineCode",{parentName:"li"},".cc")," e headers com ",(0,r.kt)("inlineCode",{parentName:"li"},".h"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"my_useful_class.cc # Prefer\xedvel\nmy-useful-class.cc\n")),(0,r.kt)("h4",{id:"classes-e-tipos-de-vari\xe1veis-personalizados"},"Classes e Tipos de vari\xe1veis personalizados"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Todas as palavras come\xe7am com letra mai\xfascula, sem separa\xe7\xe3o entre elas")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c++"},"class UrlTable { ... }\nstruct UrlTableProperties { ... }\n")),(0,r.kt)("h4",{id:"vari\xe1veis-1"},"Vari\xe1veis"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Geral: Todas min\xfasculas, com ",(0,r.kt)("inlineCode",{parentName:"li"},"_")," entre palavras"),(0,r.kt)("li",{parentName:"ul"},"Atributos de classe: mesmo que Geral, mas com ",(0,r.kt)("inlineCode",{parentName:"li"},"_")," a mais no final")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c++"},"// Nome de uma vari\xe1vel qualquer\nstd::string table_name;\n\nclass TableInfo {\n  ...\n private:\n  std::string table_name_;  // OK - underscore no final.\n  static Pool<TableInfo>* pool_;  // OK.\n};\n")),(0,r.kt)("h4",{id:"constantes-1"},"Constantes"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Come\xe7am com ",(0,r.kt)("inlineCode",{parentName:"li"},"k"),"; palavras subsequentes come\xe7am com letra mai\xfascula")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c++"},"const int kDaysInAWeek = 7;\n")),(0,r.kt)("h4",{id:"fun\xe7\xf5es-3"},"Fun\xe7\xf5es"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Todas as palavras come\xe7am com mai\xfascula"),(0,r.kt)("li",{parentName:"ul"},"Se for fun\xe7\xe3o de acesso ou modificador (i.e. getter ou setter), \xe9 nomeado como uma vari\xe1vel")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c++"},"OpenFile()\n\n// Getter e setter\nint count()\nvoid set_count(int count)\n")),(0,r.kt)("h4",{id:"namespaces"},(0,r.kt)("inlineCode",{parentName:"h4"},"namespaces")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Tudo min\xfasculo, com ",(0,r.kt)("inlineCode",{parentName:"li"},"_")," separando palavras"),(0,r.kt)("li",{parentName:"ul"},"Deve ser o nome do projeto contido no ",(0,r.kt)("inlineCode",{parentName:"li"},"namespace"))),(0,r.kt)("h4",{id:"macros-define"},"Macros (",(0,r.kt)("inlineCode",{parentName:"h4"},"#define"),")"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Tudo mai\xfasculo, com ",(0,r.kt)("inlineCode",{parentName:"li"},"_")," separando")),(0,r.kt)("h3",{id:"especificidades-da-linguagem-1"},"Especificidades da Linguagem"),(0,r.kt)("h4",{id:"headers-arquivos-h"},"Headers (arquivos ",(0,r.kt)("inlineCode",{parentName:"h4"},".h"),")"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Todo c\xf3digo que n\xe3o seja extremamente curto ou um teste unit\xe1rio deve ter um ",(0,r.kt)("inlineCode",{parentName:"li"},".h")),(0,r.kt)("li",{parentName:"ul"},"Todo ",(0,r.kt)("inlineCode",{parentName:"li"},".h"),' deve ter um "header guard" para impedir inclus\xe3o m\xfaltipla:')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c++"},"// No arquivo foo/src/bar/baz.h\n#ifndef FOO_BAR_BAZ_H_\n#define FOO_BAR_BAZ_H_\n\n...\n\n#endif  // FOO_BAR_BAZ_H_\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"N\xe3o declare fun\xe7\xf5es antes de defini-las - use o ",(0,r.kt)("inlineCode",{parentName:"p"},".h"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"N\xe3o declare fun\xe7\xf5es do tipo ",(0,r.kt)("inlineCode",{parentName:"p"},"static")," em um arquivo ",(0,r.kt)("inlineCode",{parentName:"p"},".h"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Ordem de inclus\xe3o do ",(0,r.kt)("inlineCode",{parentName:"p"},"#include")),(0,r.kt)("ol",{parentName:"li"},(0,r.kt)("li",{parentName:"ol"},"Headers relacionados"),(0,r.kt)("li",{parentName:"ol"},"Headers de C"),(0,r.kt)("li",{parentName:"ol"},"Headers de C++"),(0,r.kt)("li",{parentName:"ol"},"Headers de bibliotecas padr\xe3o"),(0,r.kt)("li",{parentName:"ol"},"Headers de outras bibliotecas"),(0,r.kt)("li",{parentName:"ol"},"Headers definidos no seu projeto")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Cada grupo deve ser separado por uma linha em branco")))),(0,r.kt)("h4",{id:"namespaces-1"},(0,r.kt)("inlineCode",{parentName:"h4"},"namespaces")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Namespaces subdivide the global scope into distinct, named scopes, and so are useful for preventing name collisions in the global scope.")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"O final de ",(0,r.kt)("inlineCode",{parentName:"li"},"namespace"),"s grandes deve ser comentado"),(0,r.kt)("li",{parentName:"ul"},"N\xe3o declare nada dentro do ",(0,r.kt)("inlineCode",{parentName:"li"},"namespace std")),(0,r.kt)("li",{parentName:"ul"},"N\xc3O use a diretiva ",(0,r.kt)("inlineCode",{parentName:"li"},"using")," (e.g. ",(0,r.kt)("inlineCode",{parentName:"li"},"using namespace foo"),"), porque ela polui o ",(0,r.kt)("inlineCode",{parentName:"li"},"namespace"))),(0,r.kt)("h4",{id:"misc-1"},"Misc"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"D\xea valor a vari\xe1veis no momento em que elas forem declaradas"),(0,r.kt)("li",{parentName:"ul"},"Prefira n\xe3o declarar vari\xe1veis globais est\xe1ticas - elas podem causar bugs dif\xedceis de encontrar depois"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"structs")," s\xf3 devem ser usados para armazenamento de objetos passivos, sen\xe3o devem ser usadas classes"),(0,r.kt)("li",{parentName:"ul"},"Em geral, \xe9 prefer\xedvel compor classes (ter um objeto de uma classe como atributo de outra) a usar ",(0,r.kt)("inlineCode",{parentName:"li"},"inheritance"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},'S\xf3 fa\xe7a uma subclasse de uma superclasse se o objeto da subclasse for "um tipo de" objeto da superclasse (e.g. Skyrats \xe9 "um tipo de" Grupo de Extens\xe3o)'))),(0,r.kt)("li",{parentName:"ul"},"Para representar o valor ",(0,r.kt)("inlineCode",{parentName:"li"},"NULL"),", use ",(0,r.kt)("inlineCode",{parentName:"li"},"nullptr")," para ponteiros e ",(0,r.kt)("inlineCode",{parentName:"li"},"'\\0'")," para char")),(0,r.kt)("h2",{id:"ros"},"ROS"),(0,r.kt)("h3",{id:"nomenclatura-3"},"Nomenclatura"),(0,r.kt)("h4",{id:"pacotes-t\xf3picos-e-servi\xe7os"},"Pacotes, T\xf3picos e Servi\xe7os"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Todas as letras min\xfasculas, com underscore entre palavras")),(0,r.kt)("h4",{id:"arquivos-1"},"Arquivos"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Todas as letras min\xfasculas, com underscore entre palavras")),(0,r.kt)("h4",{id:""}),(0,r.kt)("h3",{id:"misc-2"},"Misc"),(0,r.kt)("h4",{id:"sa\xedda-do-terminal"},"Sa\xedda do terminal"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Evite print e similares; prefira logs do ROS (e.g. ",(0,r.kt)("inlineCode",{parentName:"li"},"rospy.loginfo()"),") e outras fun\xe7\xf5es do pacote ",(0,r.kt)("a",{parentName:"li",href:"http://wiki.ros.org/rosconsole"},(0,r.kt)("inlineCode",{parentName:"a"},"rosconsole")))),(0,r.kt)("h4",{id:"c\xf3digo-n\xe3o-mais-mantido"},"C\xf3digo n\xe3o mais mantido"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Em headers (",(0,r.kt)("inlineCode",{parentName:"li"},".h"),"), coloque um coment\xe1rio"),(0,r.kt)("li",{parentName:"ul"},"Para fun\xe7\xf5es, use ",(0,r.kt)("inlineCode",{parentName:"li"},"ROS_DEPRECATED")),(0,r.kt)("li",{parentName:"ul"},"Para classes, use ",(0,r.kt)("inlineCode",{parentName:"li"},"ROS_DEPRECATED")," no construtor da classe")),(0,r.kt)("h2",{id:"refer\xeancias"},"Refer\xeancias"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://google.github.io/styleguide/cppguide.html#Naming"},"Google C++ Style Guide")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://www.python.org/dev/peps/pep-0008/"},"PEP 8 -- Style Guide for Python Code")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://www.python.org/dev/peps/pep-0257/"},"PEP 257 -- Docstring Conventions")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"http://wiki.ros.org/StyleGuide"},"ROS Style Guide")))}p.isMDXComponent=!0}}]);