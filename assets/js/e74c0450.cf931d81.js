"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[9314],{3905:function(e,o,r){r.d(o,{Zo:function(){return p},kt:function(){return c}});var a=r(7294);function t(e,o,r){return o in e?Object.defineProperty(e,o,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[o]=r,e}function n(e,o){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);o&&(a=a.filter((function(o){return Object.getOwnPropertyDescriptor(e,o).enumerable}))),r.push.apply(r,a)}return r}function s(e){for(var o=1;o<arguments.length;o++){var r=null!=arguments[o]?arguments[o]:{};o%2?n(Object(r),!0).forEach((function(o){t(e,o,r[o])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):n(Object(r)).forEach((function(o){Object.defineProperty(e,o,Object.getOwnPropertyDescriptor(r,o))}))}return e}function l(e,o){if(null==e)return{};var r,a,t=function(e,o){if(null==e)return{};var r,a,t={},n=Object.keys(e);for(a=0;a<n.length;a++)r=n[a],o.indexOf(r)>=0||(t[r]=e[r]);return t}(e,o);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(a=0;a<n.length;a++)r=n[a],o.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(t[r]=e[r])}return t}var i=a.createContext({}),m=function(e){var o=a.useContext(i),r=o;return e&&(r="function"==typeof e?e(o):s(s({},o),e)),r},p=function(e){var o=m(e.components);return a.createElement(i.Provider,{value:o},e.children)},d={inlineCode:"code",wrapper:function(e){var o=e.children;return a.createElement(a.Fragment,{},o)}},u=a.forwardRef((function(e,o){var r=e.components,t=e.mdxType,n=e.originalType,i=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=m(r),c=t,f=u["".concat(i,".").concat(c)]||u[c]||d[c]||n;return r?a.createElement(f,s(s({ref:o},p),{},{components:r})):a.createElement(f,s({ref:o},p))}));function c(e,o){var r=arguments,t=o&&o.mdxType;if("string"==typeof e||t){var n=r.length,s=new Array(n);s[0]=u;var l={};for(var i in o)hasOwnProperty.call(o,i)&&(l[i]=o[i]);l.originalType=e,l.mdxType="string"==typeof e?e:t,s[1]=l;for(var m=2;m<n;m++)s[m]=r[m];return a.createElement.apply(null,s)}return a.createElement.apply(null,r)}u.displayName="MDXCreateElement"},8624:function(e,o,r){r.r(o),r.d(o,{frontMatter:function(){return l},contentTitle:function(){return i},metadata:function(){return m},toc:function(){return p},default:function(){return u}});var a=r(7462),t=r(3366),n=(r(7294),r(3905)),s=["components"],l={},i=void 0,m={unversionedId:"Tello/errors",id:"Tello/errors",isDocsHomePage:!1,title:"errors",description:"---",source:"@site/../docs/Tello/errors.md",sourceDirName:"Tello",slug:"/Tello/errors",permalink:"/knowledge_base/docs/Tello/errors",editUrl:"https://github.com/SkyRats/knowledge_base/tree/main/docs/../docs/Tello/errors.md",tags:[],version:"current",frontMatter:{},sidebar:"docssidebar",previous:{title:"Gazebo",permalink:"/knowledge_base/docs/Simuladores/Gazebo"},next:{title:"ROS1",permalink:"/knowledge_base/docs/Voo autonomo/ros1"}},p=[{value:"sidebar_position: 1",id:"sidebar_position-1",children:[],level:2},{value:"Auto-landing",id:"auto-landing",children:[],level:2},{value:"Flip errors",id:"flip-errors",children:[],level:2},{value:"Out of range",id:"out-of-range",children:[],level:2}],d={toc:p};function u(e){var o=e.components,l=(0,t.Z)(e,s);return(0,n.kt)("wrapper",(0,a.Z)({},d,l,{components:o,mdxType:"MDXLayout"}),(0,n.kt)("hr",null),(0,n.kt)("h2",{id:"sidebar_position-1"},"sidebar_position: 1"),(0,n.kt)("h1",{id:"solucionando-erros"},"Solucionando erros"),(0,n.kt)("p",null,"Essa p\xe1gina tem o intuito de mostrar as solu\xe7\xf5es encontradas para lidar com erros que ocorrem naturalmente com o uso do Tello com scripts em Python, ou fora do aplicativo."),(0,n.kt)("h2",{id:"auto-landing"},"Auto-landing"),(0,n.kt)("p",null,"Um dos problemas comuns que ocorriam era o Tello pousar inesperadamente, sem motivos aparentes. Isso pode acontecer por algumas raz\xf5es:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"Pouca bateria"),": O Tello come\xe7a a piscar vermelho (como descrito na tabela do manual) e pousa. Vale a pena sempre mandar printar a bateria para monitorar isso."),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre"}," self.battery = self.tello.get_battery()\n print(self.battery) \n"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"Muito tempo sem comandos"),': Quando o drone n\xe3o recebe um comando dentro de um determi-\nnado per\xedodo de tempo, ele pousa por motivos de seguran\xe7a (por exem-\nplo, quando seu programa caiu ou a conex\xe3o foi interrompida). Nesse\ncaso, o Tello pousa geralmente depois de 15 segundos sem receber co-\nmandos, piscando vermelho tamb \u0301em (mas \u201dsolid\u201d). Cuidado, portanto,\nse o seu c \u0301odigo tem time.sleep muito longo. Isso pode fazer o Tello pousar\nou perder conex \u0303ao. A pr\xf3pria biblioteca DJITelloPy tem seus pr\xf3prios\ntime.sleep embutidos, apesar de parecerem,  \xe1s vezes, insuficientes mesmo.\nA solu\xe7\xe3o encontrada para isso foi mandar um sinal de "command" para\no drone a cada 10 segundos (em segmentos do c\xf3digo que dependem de\ninput no computador e, por isso podem demorar, ou em loops que de-\npendem da detec\xe3o da m\xe3o para mandar comandos). Isso parece que\nresolveu o problema do Tello pousar automaticamente e n\xe3o prejudica\na seguran\xe7a, pois, se de fato perdermos a conex\xe3o com o Tello, ele ir\xe1\npousar automaticamente ap\xf3s 15 segundos. Veja abaixo a fun\xe7\xe3o:'))),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},'def keep_tello_alive(self):\n        # Manda sinal para o tello n\xe3o pousar. Criamos uma fun\xe7\xe3o, pois chamaremos em outra classe\n        if not SIMULATION:\n            self.tello.send_control_command("command")\n')),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Falta de tempo de espera"),": O contr\xe1rio tamb\xe9m pode acontecer. uando o Tello recebe comando sem ter terminado o  \xfaltimo,  \xe1s vezes\npode dar erro e ele acabar pousando. Isso ocorre principalmente logo ap\xf3s ",(0,n.kt)("em",{parentName:"li"},"takeoff"),". Mensagens de erro que ocorrem\nquando falta delay s\xe3o: ",(0,n.kt)("strong",{parentName:"li"},"error Not joystick")," ou ",(0,n.kt)("strong",{parentName:"li"},"Exception: Command 'xxxx' was unsuccessful for 4 tries."),", por exemplo. Nessa situa\xe7\xe3o, o Tello tamb\xe9m pisca vermelho e pousa. Tente colocar algum ",(0,n.kt)("em",{parentName:"li"},"time.sleep")," e veja se melhora. Ou, ainda, espere um pouco antes de rodar o programa logo ap\xf3s conectar com o Tello.")),(0,n.kt)("h2",{id:"flip-errors"},"Flip errors"),(0,n.kt)("p",null,"Outro erro comum ao rodar script de python com o Tello \xe9 que ele n\xe3o analisava o n\xedvel de bateria antes de mandar um comando de 'flip'. O problema \xe9 que abaixo de 50% de bateria, o drone n\xe3o d\xe1 flips. Ao receber um comando de 'flip' sem ter bateria suficiente, o drone retorna ",(0,n.kt)("strong",{parentName:"p"},"flip error")," e isso pode causar erros maiores no c\xf3digo como ",(0,n.kt)("strong",{parentName:"p"},"Exception: Command 'xxxx' was unsuccessful for 4 tries.")," que pode levar ao pouso autom\xe1tico. Logo, foi inclu\xeddo no c\xf3digo uma fun\xe7\xe3o que sempre verifica o n\xedvel de bateria e retorna se \xe9 poss\xedvel dar 'flip' ou n\xe3o (tudo armazenado na vari\xe1vel ",(0,n.kt)("em",{parentName:"p"},"self.tricks")," do tipo ",(0,n.kt)("em",{parentName:"p"},"bool"),"):"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"}," def get_tello_battery(self):\n        if not SIMULATION:\n            self.battery = self.tello.get_battery()\n        else:\n            self.battery = BATTERY\n\n        if self.battery <= 50:\n            self.tricks = False\n        else:\n            self.tricks = True\n")),(0,n.kt)("h2",{id:"out-of-range"},"Out of range"),(0,n.kt)("p",null,"Al\xe9m de erros de manobras com 'flip', cuidado ao mandar o Tello se movimentar para lugares imposs\xedveis, por exemplo, ir para baixo 2 metros, sendo que ele est\xe1 voando a um metro do ch\xe3o. Ou ainda, mandar ele se movimentar em alguma dire\xe7\xe3o abaixo de 20 cm (o m\xednimo \xe9 20 cm). Quando mandamos algum desses comandos descritos, pode dar o seguinte erro:"),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"Out Of Range",src:r(4966).Z})),(0,n.kt)("p",null,"Para evitar esse erro, verifique sempre se a movimenta\xe7\xe3o \xe9 poss\xedvel dentro das limita\xe7\xf5es do Tello. Por exemplo, em parte do c\xf3digo, verificamos se a altura a descer \xe9 poss\xedvel dada a altura atual do drone:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},' if getHeight - distance > minHeight:\n                   print("Descendo", distance, "cm")\n')))}u.isMDXComponent=!0},4966:function(e,o,r){o.Z=r.p+"assets/images/error_ofr-30b3e71460d1529469e3b7fbe7534b6c.png"}}]);